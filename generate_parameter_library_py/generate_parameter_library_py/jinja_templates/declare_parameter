if (!parameters_interface_->has_parameter(prefix_ + "{{parameter_name}}")) {
{%- filter indent(width=4) %}
rcl_interfaces::msg::ParameterDescriptor descriptor;
descriptor.description = "{{parameter_description}}";
descriptor.read_only = {{parameter_read_only}};
{%- for validation in parameter_validations if validation.function_name.startswith("element_bounds") %}
{%- if parameter_type == "DOUBLE_ARRAY" %}
descriptor.floating_point_range.resize({{loop.index}});
descriptor.floating_point_range.at({{loop.index0}}).from_value = {{validation.arguments[0]}};
descriptor.floating_point_range.at({{loop.index0}}).to_value = {{validation.arguments[1]}};
{%- elif parameter_type == "INTEGER_ARRAY" %}
descriptor.integer_range.resize({{loop.index}});
descriptor.integer_range.at({{loop.index0}}).from_value = {{validation.arguments[0]}};
descriptor.integer_range.at({{loop.index0}}).to_value = {{validation.arguments[1]}};
{%- endif %}
{%- endfor %}
{%- if not parameter_value|length %}
auto parameter = rclcpp::ParameterType::PARAMETER_{{parameter_type}};
{% endif -%}
{%- if parameter_value|length %}
auto parameter = to_parameter_value(updated_params.{{parameter_value}});
{% endif -%}
parameters_interface_->declare_parameter(prefix_ + "{{parameter_name}}", parameter, descriptor);
{% endfilter -%}
}
