for (const auto & value : params_.{{mapped_param}}){
    auto entry = params_.{{parameter_map}}[value];
    auto param_name = fmt::format("{}.{}.{}", "{{struct_name}}", value, "{{parameter_field}}");
    if (!parameters_interface_->has_parameter(param_name)) {
     rcl_interfaces::msg::ParameterDescriptor descriptor;
     descriptor.description = "{{parameter_description}}";
     descriptor.read_only = {{parameter_read_only}};
     {%- if not default_value|length %}
     auto parameter = rclcpp::ParameterType::PARAMETER_{{parameter_type}};
     {% endif -%}
     {%- if default_value|length %}
     auto parameter = rclcpp::ParameterValue(entry.{{parameter_field}});
     {% endif -%}
     parameters_interface_->declare_parameter(param_name, parameter, descriptor);
    }
    {% if parameter_validations|length -%}
    {{parameter_validations-}}
    {% endif -%}
}