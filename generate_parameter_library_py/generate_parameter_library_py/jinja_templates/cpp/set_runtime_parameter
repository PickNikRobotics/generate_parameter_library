for (const auto & value : {{param_struct_instance}}.{{mapped_param}}){
{%- filter indent(width=4) %}
auto& entry = {{param_struct_instance}}.{{parameter_map}}[value];
auto param_name = fmt::format("{}{}.{}.{}", prefix_, "{{struct_name}}", value, "{{parameter_field}}");
param = parameters_interface_->get_parameter(param_name);
RCLCPP_DEBUG_STREAM(logger_, param.get_name() << ": " << param.get_type_name() << " = " << param.value_to_string());
{% if parameter_validations|length -%}
{{parameter_validations-}}
{% endif -%}
entry.{{parameter_field}} = param.{{parameter_as_function}};
{% endfilter -%}
}
